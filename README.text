  .tsconfig
  "compilerOptions": {
    "baseUrl": "./src"
    /* Visit https://aka.ms/tsconfig.json to read more about this file */
  }

node_modules/@react-native-masked-view/masked-view/types/index.d.ts
type Constructor<T> = new (...args: any[]) => T;
remove "ReactNative."

## yarn add @react-native-async-storage/async-storage
npx pod-install

****************************************************************

## yarn add @react-navigation/native
npm install react-native-screens react-native-safe-area-context
npx pod-install ios

in MainActivity.java.
import android.os.Bundle;

@Override
protected void onCreate(Bundle savedInstanceState) {
  super.onCreate(null);
}

****************************************************************

## yarn add react-native-gesture-handler
cd ios && pod install

export default function App() {
  return <GestureHandlerRootView style={{ flex: 1 }}>{/* content */}</GestureHandlerRootView>;
}

index.js
import 'react-native-gesture-handler';

****************************************************************

## yarn add react-native-reanimated
babel.config.js:

  module.exports = {
    presets: [
      ...
    ],
    plugins: [
      ...
      'react-native-reanimated/plugin',
    ],
  };

****************************************************************

## yarn add react-native-vector-icons
Browse to node_modules/react-native-vector-icons and drag the folder Fonts (or just the ones you want) to your project in Xcode

info.plist
<key>UIAppFonts</key>
<array>
  <string>AntDesign.ttf</string>
  <string>Entypo.ttf</string>
  <string>EvilIcons.ttf</string>
  <string>Feather.ttf</string>
  <string>FontAwesome.ttf</string>
  <string>FontAwesome5_Brands.ttf</string>
  <string>FontAwesome5_Regular.ttf</string>
  <string>FontAwesome5_Solid.ttf</string>
  <string>Foundation.ttf</string>
  <string>Ionicons.ttf</string>
  <string>MaterialIcons.ttf</string>
  <string>MaterialCommunityIcons.ttf</string>
  <string>SimpleLineIcons.ttf</string>
  <string>Octicons.ttf</string>
  <string>Zocial.ttf</string>
  <string>Fontisto.ttf</string>
</array>

In your XCode Settings, in the Build Phases tab, under Copy Bundle Resources add the fonts you have copied in the Fonts directory.

When using auto linking, it will automatically add all fonts to the Build Phases, Copy Pods Resources. Which will end up in your bundle. To avoid that, create a react-native.config.js file at the root of your react-native project with:
module.exports = {
  dependencies: {
    'react-native-vector-icons': {
      platforms: {
        ios: null,
      },
    },
  },
};

android/app/build.gradle
apply from: "../../node_modules/react-native-vector-icons/fonts.gradle"

****************************************************************

yarn add --dev react-native-svg-transformer

metro.config.js

const { getDefaultConfig } = require("expo/metro-config");

module.exports = (() => {
  const config = getDefaultConfig(__dirname);

  const { transformer, resolver } = config;

  config.transformer = {
    ...transformer,
    babelTransformerPath: require.resolve("react-native-svg-transformer"),
  };
  config.resolver = {
    ...resolver,
    assetExts: resolver.assetExts.filter((ext) => ext !== "svg"),
    sourceExts: [...resolver.sourceExts, "svg"],
  };

  return config;
})();

****************************************************************


yarn add lottie-react-native